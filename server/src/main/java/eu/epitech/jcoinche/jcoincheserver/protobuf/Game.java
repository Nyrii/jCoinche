// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

package eu.epitech.jcoinche.jcoincheserver.protobuf;

public final class Game {
  private Game() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AnswerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Answer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string request = 1;</code>
     */
    java.lang.String getRequest();
    /**
     * <code>optional string request = 1;</code>
     */
    com.google.protobuf.ByteString
        getRequestBytes();

    /**
     * <code>optional int32 code = 2;</code>
     */
    int getCode();

    /**
     * <pre>
     * Identifies which field is filled in.
     * </pre>
     *
     * <code>optional .protobuf.Answer.Type type = 3;</code>
     */
    int getTypeValue();
    /**
     * <pre>
     * Identifies which field is filled in.
     * </pre>
     *
     * <code>optional .protobuf.Answer.Type type = 3;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type getType();

    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    boolean hasPlayer();
    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getPlayer();
    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder getPlayerOrBuilder();

    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    boolean hasBidding();
    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getBidding();
    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder getBiddingOrBuilder();

    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    boolean hasGame();
    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getGame();
    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder getGameOrBuilder();

    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    boolean hasCards();
    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getCards();
    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder getCardsOrBuilder();
  }
  /**
   * <pre>
   * [START messages]
   * </pre>
   *
   * Protobuf type {@code protobuf.Answer}
   */
  public  static final class Answer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.Answer)
      AnswerOrBuilder {
    // Use Answer.newBuilder() to construct.
    private Answer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Answer() {
      request_ = "";
      code_ = 0;
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Answer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              request_ = s;
              break;
            }
            case 16: {

              code_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 34: {
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder subBuilder = null;
              if (player_ != null) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder subBuilder = null;
              if (bidding_ != null) {
                subBuilder = bidding_.toBuilder();
              }
              bidding_ = input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bidding_);
                bidding_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder subBuilder = null;
              if (game_ != null) {
                subBuilder = game_.toBuilder();
              }
              game_ = input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(game_);
                game_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder subBuilder = null;
              if (cards_ != null) {
                subBuilder = cards_.toBuilder();
              }
              cards_ = input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cards_);
                cards_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Answer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Answer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Builder.class);
    }

    /**
     * Protobuf enum {@code protobuf.Answer.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>PLAYER = 1;</code>
       */
      PLAYER(1),
      /**
       * <code>BIDDING = 2;</code>
       */
      BIDDING(2),
      /**
       * <code>GAME = 3;</code>
       */
      GAME(3),
      /**
       * <code>SETTINGS = 4;</code>
       */
      SETTINGS(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>PLAYER = 1;</code>
       */
      public static final int PLAYER_VALUE = 1;
      /**
       * <code>BIDDING = 2;</code>
       */
      public static final int BIDDING_VALUE = 2;
      /**
       * <code>GAME = 3;</code>
       */
      public static final int GAME_VALUE = 3;
      /**
       * <code>SETTINGS = 4;</code>
       */
      public static final int SETTINGS_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return PLAYER;
          case 2: return BIDDING;
          case 3: return GAME;
          case 4: return SETTINGS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Answer.Type)
    }

    public static final int REQUEST_FIELD_NUMBER = 1;
    private volatile java.lang.Object request_;
    /**
     * <code>optional string request = 1;</code>
     */
    public java.lang.String getRequest() {
      java.lang.Object ref = request_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        request_ = s;
        return s;
      }
    }
    /**
     * <code>optional string request = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRequestBytes() {
      java.lang.Object ref = request_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        request_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODE_FIELD_NUMBER = 2;
    private int code_;
    /**
     * <code>optional int32 code = 2;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * Identifies which field is filled in.
     * </pre>
     *
     * <code>optional .protobuf.Answer.Type type = 3;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Identifies which field is filled in.
     * </pre>
     *
     * <code>optional .protobuf.Answer.Type type = 3;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type getType() {
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.valueOf(type_);
      return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.UNRECOGNIZED : result;
    }

    public static final int PLAYER_FIELD_NUMBER = 4;
    private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player player_;
    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    public boolean hasPlayer() {
      return player_ != null;
    }
    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getPlayer() {
      return player_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.getDefaultInstance() : player_;
    }
    /**
     * <pre>
     * One of the following will be filled in.
     * </pre>
     *
     * <code>optional .protobuf.Player player = 4;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder getPlayerOrBuilder() {
      return getPlayer();
    }

    public static final int BIDDING_FIELD_NUMBER = 5;
    private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding bidding_;
    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    public boolean hasBidding() {
      return bidding_ != null;
    }
    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getBidding() {
      return bidding_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDefaultInstance() : bidding_;
    }
    /**
     * <code>optional .protobuf.Bidding bidding = 5;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder getBiddingOrBuilder() {
      return getBidding();
    }

    public static final int GAME_FIELD_NUMBER = 6;
    private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress game_;
    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    public boolean hasGame() {
      return game_ != null;
    }
    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getGame() {
      return game_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.getDefaultInstance() : game_;
    }
    /**
     * <code>optional .protobuf.GameProgress game = 6;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder getGameOrBuilder() {
      return getGame();
    }

    public static final int CARDS_FIELD_NUMBER = 7;
    private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard cards_;
    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    public boolean hasCards() {
      return cards_ != null;
    }
    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getCards() {
      return cards_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.getDefaultInstance() : cards_;
    }
    /**
     * <code>optional .protobuf.DistributionCard cards = 7;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder getCardsOrBuilder() {
      return getCards();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRequestBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, request_);
      }
      if (code_ != 0) {
        output.writeInt32(2, code_);
      }
      if (type_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.NONE.getNumber()) {
        output.writeEnum(3, type_);
      }
      if (player_ != null) {
        output.writeMessage(4, getPlayer());
      }
      if (bidding_ != null) {
        output.writeMessage(5, getBidding());
      }
      if (game_ != null) {
        output.writeMessage(6, getGame());
      }
      if (cards_ != null) {
        output.writeMessage(7, getCards());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRequestBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, request_);
      }
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, code_);
      }
      if (type_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (player_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPlayer());
      }
      if (bidding_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getBidding());
      }
      if (game_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getGame());
      }
      if (cards_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCards());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer) obj;

      boolean result = true;
      result = result && getRequest()
          .equals(other.getRequest());
      result = result && (getCode()
          == other.getCode());
      result = result && type_ == other.type_;
      result = result && (hasPlayer() == other.hasPlayer());
      if (hasPlayer()) {
        result = result && getPlayer()
            .equals(other.getPlayer());
      }
      result = result && (hasBidding() == other.hasBidding());
      if (hasBidding()) {
        result = result && getBidding()
            .equals(other.getBidding());
      }
      result = result && (hasGame() == other.hasGame());
      if (hasGame()) {
        result = result && getGame()
            .equals(other.getGame());
      }
      result = result && (hasCards() == other.hasCards());
      if (hasCards()) {
        result = result && getCards()
            .equals(other.getCards());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + REQUEST_FIELD_NUMBER;
      hash = (53 * hash) + getRequest().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasPlayer()) {
        hash = (37 * hash) + PLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getPlayer().hashCode();
      }
      if (hasBidding()) {
        hash = (37 * hash) + BIDDING_FIELD_NUMBER;
        hash = (53 * hash) + getBidding().hashCode();
      }
      if (hasGame()) {
        hash = (37 * hash) + GAME_FIELD_NUMBER;
        hash = (53 * hash) + getGame().hashCode();
      }
      if (hasCards()) {
        hash = (37 * hash) + CARDS_FIELD_NUMBER;
        hash = (53 * hash) + getCards().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * [START messages]
     * </pre>
     *
     * Protobuf type {@code protobuf.Answer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Answer)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.AnswerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Answer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Answer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        request_ = "";

        code_ = 0;

        type_ = 0;

        if (playerBuilder_ == null) {
          player_ = null;
        } else {
          player_ = null;
          playerBuilder_ = null;
        }
        if (biddingBuilder_ == null) {
          bidding_ = null;
        } else {
          bidding_ = null;
          biddingBuilder_ = null;
        }
        if (gameBuilder_ == null) {
          game_ = null;
        } else {
          game_ = null;
          gameBuilder_ = null;
        }
        if (cardsBuilder_ == null) {
          cards_ = null;
        } else {
          cards_ = null;
          cardsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Answer_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer(this);
        result.request_ = request_;
        result.code_ = code_;
        result.type_ = type_;
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        if (biddingBuilder_ == null) {
          result.bidding_ = bidding_;
        } else {
          result.bidding_ = biddingBuilder_.build();
        }
        if (gameBuilder_ == null) {
          result.game_ = game_;
        } else {
          result.game_ = gameBuilder_.build();
        }
        if (cardsBuilder_ == null) {
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.getDefaultInstance()) return this;
        if (!other.getRequest().isEmpty()) {
          request_ = other.request_;
          onChanged();
        }
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.hasBidding()) {
          mergeBidding(other.getBidding());
        }
        if (other.hasGame()) {
          mergeGame(other.getGame());
        }
        if (other.hasCards()) {
          mergeCards(other.getCards());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object request_ = "";
      /**
       * <code>optional string request = 1;</code>
       */
      public java.lang.String getRequest() {
        java.lang.Object ref = request_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          request_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string request = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRequestBytes() {
        java.lang.Object ref = request_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          request_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string request = 1;</code>
       */
      public Builder setRequest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        request_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string request = 1;</code>
       */
      public Builder clearRequest() {
        
        request_ = getDefaultInstance().getRequest();
        onChanged();
        return this;
      }
      /**
       * <code>optional string request = 1;</code>
       */
      public Builder setRequestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        request_ = value;
        onChanged();
        return this;
      }

      private int code_ ;
      /**
       * <code>optional int32 code = 2;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional int32 code = 2;</code>
       */
      public Builder setCode(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 code = 2;</code>
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <pre>
       * Identifies which field is filled in.
       * </pre>
       *
       * <code>optional .protobuf.Answer.Type type = 3;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Identifies which field is filled in.
       * </pre>
       *
       * <code>optional .protobuf.Answer.Type type = 3;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies which field is filled in.
       * </pre>
       *
       * <code>optional .protobuf.Answer.Type type = 3;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type getType() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.valueOf(type_);
        return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Identifies which field is filled in.
       * </pre>
       *
       * <code>optional .protobuf.Answer.Type type = 3;</code>
       */
      public Builder setType(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Identifies which field is filled in.
       * </pre>
       *
       * <code>optional .protobuf.Answer.Type type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player player_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder> playerBuilder_;
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public boolean hasPlayer() {
        return playerBuilder_ != null || player_ != null;
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getPlayer() {
        if (playerBuilder_ == null) {
          return player_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.getDefaultInstance() : player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public Builder setPlayer(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public Builder setPlayer(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public Builder mergePlayer(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player value) {
        if (playerBuilder_ == null) {
          if (player_ != null) {
            player_ =
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = null;
          onChanged();
        } else {
          player_ = null;
          playerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder getPlayerBuilder() {
        
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_ == null ?
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.getDefaultInstance() : player_;
        }
      }
      /**
       * <pre>
       * One of the following will be filled in.
       * </pre>
       *
       * <code>optional .protobuf.Player player = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder>(
                  getPlayer(),
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding bidding_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder> biddingBuilder_;
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public boolean hasBidding() {
        return biddingBuilder_ != null || bidding_ != null;
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getBidding() {
        if (biddingBuilder_ == null) {
          return bidding_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDefaultInstance() : bidding_;
        } else {
          return biddingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public Builder setBidding(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding value) {
        if (biddingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bidding_ = value;
          onChanged();
        } else {
          biddingBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public Builder setBidding(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder builderForValue) {
        if (biddingBuilder_ == null) {
          bidding_ = builderForValue.build();
          onChanged();
        } else {
          biddingBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public Builder mergeBidding(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding value) {
        if (biddingBuilder_ == null) {
          if (bidding_ != null) {
            bidding_ =
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.newBuilder(bidding_).mergeFrom(value).buildPartial();
          } else {
            bidding_ = value;
          }
          onChanged();
        } else {
          biddingBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public Builder clearBidding() {
        if (biddingBuilder_ == null) {
          bidding_ = null;
          onChanged();
        } else {
          bidding_ = null;
          biddingBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder getBiddingBuilder() {
        
        onChanged();
        return getBiddingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder getBiddingOrBuilder() {
        if (biddingBuilder_ != null) {
          return biddingBuilder_.getMessageOrBuilder();
        } else {
          return bidding_ == null ?
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDefaultInstance() : bidding_;
        }
      }
      /**
       * <code>optional .protobuf.Bidding bidding = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder> 
          getBiddingFieldBuilder() {
        if (biddingBuilder_ == null) {
          biddingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder>(
                  getBidding(),
                  getParentForChildren(),
                  isClean());
          bidding_ = null;
        }
        return biddingBuilder_;
      }

      private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress game_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder> gameBuilder_;
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public boolean hasGame() {
        return gameBuilder_ != null || game_ != null;
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getGame() {
        if (gameBuilder_ == null) {
          return game_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.getDefaultInstance() : game_;
        } else {
          return gameBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public Builder setGame(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress value) {
        if (gameBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          game_ = value;
          onChanged();
        } else {
          gameBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public Builder setGame(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder builderForValue) {
        if (gameBuilder_ == null) {
          game_ = builderForValue.build();
          onChanged();
        } else {
          gameBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public Builder mergeGame(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress value) {
        if (gameBuilder_ == null) {
          if (game_ != null) {
            game_ =
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.newBuilder(game_).mergeFrom(value).buildPartial();
          } else {
            game_ = value;
          }
          onChanged();
        } else {
          gameBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public Builder clearGame() {
        if (gameBuilder_ == null) {
          game_ = null;
          onChanged();
        } else {
          game_ = null;
          gameBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder getGameBuilder() {
        
        onChanged();
        return getGameFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder getGameOrBuilder() {
        if (gameBuilder_ != null) {
          return gameBuilder_.getMessageOrBuilder();
        } else {
          return game_ == null ?
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.getDefaultInstance() : game_;
        }
      }
      /**
       * <code>optional .protobuf.GameProgress game = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder> 
          getGameFieldBuilder() {
        if (gameBuilder_ == null) {
          gameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder>(
                  getGame(),
                  getParentForChildren(),
                  isClean());
          game_ = null;
        }
        return gameBuilder_;
      }

      private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard cards_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder> cardsBuilder_;
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public boolean hasCards() {
        return cardsBuilder_ != null || cards_ != null;
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getCards() {
        if (cardsBuilder_ == null) {
          return cards_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.getDefaultInstance() : cards_;
        } else {
          return cardsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public Builder setCards(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cards_ = value;
          onChanged();
        } else {
          cardsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public Builder setCards(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          cards_ = builderForValue.build();
          onChanged();
        } else {
          cardsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public Builder mergeCards(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard value) {
        if (cardsBuilder_ == null) {
          if (cards_ != null) {
            cards_ =
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.newBuilder(cards_).mergeFrom(value).buildPartial();
          } else {
            cards_ = value;
          }
          onChanged();
        } else {
          cardsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = null;
          onChanged();
        } else {
          cards_ = null;
          cardsBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder getCardsBuilder() {
        
        onChanged();
        return getCardsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder getCardsOrBuilder() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilder();
        } else {
          return cards_ == null ?
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.getDefaultInstance() : cards_;
        }
      }
      /**
       * <code>optional .protobuf.DistributionCard cards = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder>(
                  getCards(),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.Answer)
    }

    // @@protoc_insertion_point(class_scope:protobuf.Answer)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Answer>
        PARSER = new com.google.protobuf.AbstractParser<Answer>() {
      public Answer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Answer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Answer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Answer> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Answer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Player)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code protobuf.Player}
   */
  public  static final class Player extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.Player)
      PlayerOrBuilder {
    // Use Player.newBuilder() to construct.
    private Player(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Player() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Player(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Player_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Player_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Player}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Player)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.PlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Player_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player(this);
        result.name_ = name_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.Player)
    }

    // @@protoc_insertion_point(class_scope:protobuf.Player)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Player>
        PARSER = new com.google.protobuf.AbstractParser<Player>() {
      public Player parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Player(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Player> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Player> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Player getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BiddingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Bidding)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool bid = 1;</code>
     */
    boolean getBid();

    /**
     * <code>optional int32 amount = 2;</code>
     */
    int getAmount();

    /**
     * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
     */
    int getContractValue();
    /**
     * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract getContract();

    /**
     * <code>optional .protobuf.Bidding.Options option = 4;</code>
     */
    int getOptionValue();
    /**
     * <code>optional .protobuf.Bidding.Options option = 4;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options getOption();

    /**
     * <code>optional bool coinche = 5;</code>
     */
    boolean getCoinche();

    /**
     * <code>optional bool surcoinche = 6;</code>
     */
    boolean getSurcoinche();

    /**
     * <code>optional bool pass = 7;</code>
     */
    boolean getPass();
  }
  /**
   * Protobuf type {@code protobuf.Bidding}
   */
  public  static final class Bidding extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.Bidding)
      BiddingOrBuilder {
    // Use Bidding.newBuilder() to construct.
    private Bidding(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Bidding() {
      bid_ = false;
      amount_ = 0;
      contract_ = 0;
      option_ = 0;
      coinche_ = false;
      surcoinche_ = false;
      pass_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Bidding(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              bid_ = input.readBool();
              break;
            }
            case 16: {

              amount_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              contract_ = rawValue;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              option_ = rawValue;
              break;
            }
            case 40: {

              coinche_ = input.readBool();
              break;
            }
            case 48: {

              surcoinche_ = input.readBool();
              break;
            }
            case 56: {

              pass_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Bidding_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Bidding_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder.class);
    }

    /**
     * Protobuf enum {@code protobuf.Bidding.Contract}
     */
    public enum Contract
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWNCONTRACT = 0;</code>
       */
      UNKNOWNCONTRACT(0),
      /**
       * <code>AMOUNT = 1;</code>
       */
      AMOUNT(1),
      /**
       * <code>CAPOT = 2;</code>
       */
      CAPOT(2),
      /**
       * <code>GENERALE = 3;</code>
       */
      GENERALE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWNCONTRACT = 0;</code>
       */
      public static final int UNKNOWNCONTRACT_VALUE = 0;
      /**
       * <code>AMOUNT = 1;</code>
       */
      public static final int AMOUNT_VALUE = 1;
      /**
       * <code>CAPOT = 2;</code>
       */
      public static final int CAPOT_VALUE = 2;
      /**
       * <code>GENERALE = 3;</code>
       */
      public static final int GENERALE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Contract valueOf(int value) {
        return forNumber(value);
      }

      public static Contract forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWNCONTRACT;
          case 1: return AMOUNT;
          case 2: return CAPOT;
          case 3: return GENERALE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Contract>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Contract> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Contract>() {
              public Contract findValueByNumber(int number) {
                return Contract.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDescriptor().getEnumTypes().get(0);
      }

      private static final Contract[] VALUES = values();

      public static Contract valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Contract(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Bidding.Contract)
    }

    /**
     * Protobuf enum {@code protobuf.Bidding.Options}
     */
    public enum Options
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWNOPTION = 0;</code>
       */
      UNKNOWNOPTION(0),
      /**
       * <code>HEARTS = 1;</code>
       */
      HEARTS(1),
      /**
       * <code>SPADES = 2;</code>
       */
      SPADES(2),
      /**
       * <code>CLUBS = 3;</code>
       */
      CLUBS(3),
      /**
       * <code>DIAMONDS = 4;</code>
       */
      DIAMONDS(4),
      /**
       * <code>TA = 5;</code>
       */
      TA(5),
      /**
       * <code>SA = 6;</code>
       */
      SA(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWNOPTION = 0;</code>
       */
      public static final int UNKNOWNOPTION_VALUE = 0;
      /**
       * <code>HEARTS = 1;</code>
       */
      public static final int HEARTS_VALUE = 1;
      /**
       * <code>SPADES = 2;</code>
       */
      public static final int SPADES_VALUE = 2;
      /**
       * <code>CLUBS = 3;</code>
       */
      public static final int CLUBS_VALUE = 3;
      /**
       * <code>DIAMONDS = 4;</code>
       */
      public static final int DIAMONDS_VALUE = 4;
      /**
       * <code>TA = 5;</code>
       */
      public static final int TA_VALUE = 5;
      /**
       * <code>SA = 6;</code>
       */
      public static final int SA_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Options valueOf(int value) {
        return forNumber(value);
      }

      public static Options forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWNOPTION;
          case 1: return HEARTS;
          case 2: return SPADES;
          case 3: return CLUBS;
          case 4: return DIAMONDS;
          case 5: return TA;
          case 6: return SA;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Options>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Options> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Options>() {
              public Options findValueByNumber(int number) {
                return Options.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDescriptor().getEnumTypes().get(1);
      }

      private static final Options[] VALUES = values();

      public static Options valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Options(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Bidding.Options)
    }

    public static final int BID_FIELD_NUMBER = 1;
    private boolean bid_;
    /**
     * <code>optional bool bid = 1;</code>
     */
    public boolean getBid() {
      return bid_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private int amount_;
    /**
     * <code>optional int32 amount = 2;</code>
     */
    public int getAmount() {
      return amount_;
    }

    public static final int CONTRACT_FIELD_NUMBER = 3;
    private int contract_;
    /**
     * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
     */
    public int getContractValue() {
      return contract_;
    }
    /**
     * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract getContract() {
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.valueOf(contract_);
      return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.UNRECOGNIZED : result;
    }

    public static final int OPTION_FIELD_NUMBER = 4;
    private int option_;
    /**
     * <code>optional .protobuf.Bidding.Options option = 4;</code>
     */
    public int getOptionValue() {
      return option_;
    }
    /**
     * <code>optional .protobuf.Bidding.Options option = 4;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options getOption() {
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.valueOf(option_);
      return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.UNRECOGNIZED : result;
    }

    public static final int COINCHE_FIELD_NUMBER = 5;
    private boolean coinche_;
    /**
     * <code>optional bool coinche = 5;</code>
     */
    public boolean getCoinche() {
      return coinche_;
    }

    public static final int SURCOINCHE_FIELD_NUMBER = 6;
    private boolean surcoinche_;
    /**
     * <code>optional bool surcoinche = 6;</code>
     */
    public boolean getSurcoinche() {
      return surcoinche_;
    }

    public static final int PASS_FIELD_NUMBER = 7;
    private boolean pass_;
    /**
     * <code>optional bool pass = 7;</code>
     */
    public boolean getPass() {
      return pass_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bid_ != false) {
        output.writeBool(1, bid_);
      }
      if (amount_ != 0) {
        output.writeInt32(2, amount_);
      }
      if (contract_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.UNKNOWNCONTRACT.getNumber()) {
        output.writeEnum(3, contract_);
      }
      if (option_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.UNKNOWNOPTION.getNumber()) {
        output.writeEnum(4, option_);
      }
      if (coinche_ != false) {
        output.writeBool(5, coinche_);
      }
      if (surcoinche_ != false) {
        output.writeBool(6, surcoinche_);
      }
      if (pass_ != false) {
        output.writeBool(7, pass_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bid_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, bid_);
      }
      if (amount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, amount_);
      }
      if (contract_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.UNKNOWNCONTRACT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, contract_);
      }
      if (option_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.UNKNOWNOPTION.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, option_);
      }
      if (coinche_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, coinche_);
      }
      if (surcoinche_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, surcoinche_);
      }
      if (pass_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, pass_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding) obj;

      boolean result = true;
      result = result && (getBid()
          == other.getBid());
      result = result && (getAmount()
          == other.getAmount());
      result = result && contract_ == other.contract_;
      result = result && option_ == other.option_;
      result = result && (getCoinche()
          == other.getCoinche());
      result = result && (getSurcoinche()
          == other.getSurcoinche());
      result = result && (getPass()
          == other.getPass());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + BID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getBid());
      hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getAmount();
      hash = (37 * hash) + CONTRACT_FIELD_NUMBER;
      hash = (53 * hash) + contract_;
      hash = (37 * hash) + OPTION_FIELD_NUMBER;
      hash = (53 * hash) + option_;
      hash = (37 * hash) + COINCHE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCoinche());
      hash = (37 * hash) + SURCOINCHE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSurcoinche());
      hash = (37 * hash) + PASS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPass());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Bidding}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Bidding)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.BiddingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Bidding_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Bidding_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        bid_ = false;

        amount_ = 0;

        contract_ = 0;

        option_ = 0;

        coinche_ = false;

        surcoinche_ = false;

        pass_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Bidding_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding(this);
        result.bid_ = bid_;
        result.amount_ = amount_;
        result.contract_ = contract_;
        result.option_ = option_;
        result.coinche_ = coinche_;
        result.surcoinche_ = surcoinche_;
        result.pass_ = pass_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.getDefaultInstance()) return this;
        if (other.getBid() != false) {
          setBid(other.getBid());
        }
        if (other.getAmount() != 0) {
          setAmount(other.getAmount());
        }
        if (other.contract_ != 0) {
          setContractValue(other.getContractValue());
        }
        if (other.option_ != 0) {
          setOptionValue(other.getOptionValue());
        }
        if (other.getCoinche() != false) {
          setCoinche(other.getCoinche());
        }
        if (other.getSurcoinche() != false) {
          setSurcoinche(other.getSurcoinche());
        }
        if (other.getPass() != false) {
          setPass(other.getPass());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean bid_ ;
      /**
       * <code>optional bool bid = 1;</code>
       */
      public boolean getBid() {
        return bid_;
      }
      /**
       * <code>optional bool bid = 1;</code>
       */
      public Builder setBid(boolean value) {
        
        bid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bid = 1;</code>
       */
      public Builder clearBid() {
        
        bid_ = false;
        onChanged();
        return this;
      }

      private int amount_ ;
      /**
       * <code>optional int32 amount = 2;</code>
       */
      public int getAmount() {
        return amount_;
      }
      /**
       * <code>optional int32 amount = 2;</code>
       */
      public Builder setAmount(int value) {
        
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 amount = 2;</code>
       */
      public Builder clearAmount() {
        
        amount_ = 0;
        onChanged();
        return this;
      }

      private int contract_ = 0;
      /**
       * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
       */
      public int getContractValue() {
        return contract_;
      }
      /**
       * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
       */
      public Builder setContractValue(int value) {
        contract_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract getContract() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.valueOf(contract_);
        return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
       */
      public Builder setContract(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Contract value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        contract_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Bidding.Contract contract = 3;</code>
       */
      public Builder clearContract() {
        
        contract_ = 0;
        onChanged();
        return this;
      }

      private int option_ = 0;
      /**
       * <code>optional .protobuf.Bidding.Options option = 4;</code>
       */
      public int getOptionValue() {
        return option_;
      }
      /**
       * <code>optional .protobuf.Bidding.Options option = 4;</code>
       */
      public Builder setOptionValue(int value) {
        option_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Bidding.Options option = 4;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options getOption() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.valueOf(option_);
        return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .protobuf.Bidding.Options option = 4;</code>
       */
      public Builder setOption(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding.Options value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        option_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Bidding.Options option = 4;</code>
       */
      public Builder clearOption() {
        
        option_ = 0;
        onChanged();
        return this;
      }

      private boolean coinche_ ;
      /**
       * <code>optional bool coinche = 5;</code>
       */
      public boolean getCoinche() {
        return coinche_;
      }
      /**
       * <code>optional bool coinche = 5;</code>
       */
      public Builder setCoinche(boolean value) {
        
        coinche_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool coinche = 5;</code>
       */
      public Builder clearCoinche() {
        
        coinche_ = false;
        onChanged();
        return this;
      }

      private boolean surcoinche_ ;
      /**
       * <code>optional bool surcoinche = 6;</code>
       */
      public boolean getSurcoinche() {
        return surcoinche_;
      }
      /**
       * <code>optional bool surcoinche = 6;</code>
       */
      public Builder setSurcoinche(boolean value) {
        
        surcoinche_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool surcoinche = 6;</code>
       */
      public Builder clearSurcoinche() {
        
        surcoinche_ = false;
        onChanged();
        return this;
      }

      private boolean pass_ ;
      /**
       * <code>optional bool pass = 7;</code>
       */
      public boolean getPass() {
        return pass_;
      }
      /**
       * <code>optional bool pass = 7;</code>
       */
      public Builder setPass(boolean value) {
        
        pass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pass = 7;</code>
       */
      public Builder clearPass() {
        
        pass_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.Bidding)
    }

    // @@protoc_insertion_point(class_scope:protobuf.Bidding)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Bidding>
        PARSER = new com.google.protobuf.AbstractParser<Bidding>() {
      public Bidding parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Bidding(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Bidding> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Bidding> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Bidding getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.Card)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .protobuf.Card.CardType cardType = 1;</code>
     */
    int getCardTypeValue();
    /**
     * <code>optional .protobuf.Card.CardType cardType = 1;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType getCardType();

    /**
     * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
     */
    int getCardValueValue();
    /**
     * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue getCardValue();
  }
  /**
   * Protobuf type {@code protobuf.Card}
   */
  public  static final class Card extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.Card)
      CardOrBuilder {
    // Use Card.newBuilder() to construct.
    private Card(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Card() {
      cardType_ = 0;
      cardValue_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Card(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              cardType_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              cardValue_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Card_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Card_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder.class);
    }

    /**
     * Protobuf enum {@code protobuf.Card.CardType}
     */
    public enum CardType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWNCARDTYPE = 0;</code>
       */
      UNKNOWNCARDTYPE(0),
      /**
       * <code>HEARTS = 1;</code>
       */
      HEARTS(1),
      /**
       * <code>SPADES = 2;</code>
       */
      SPADES(2),
      /**
       * <code>CLUBS = 3;</code>
       */
      CLUBS(3),
      /**
       * <code>DIAMONDS = 4;</code>
       */
      DIAMONDS(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWNCARDTYPE = 0;</code>
       */
      public static final int UNKNOWNCARDTYPE_VALUE = 0;
      /**
       * <code>HEARTS = 1;</code>
       */
      public static final int HEARTS_VALUE = 1;
      /**
       * <code>SPADES = 2;</code>
       */
      public static final int SPADES_VALUE = 2;
      /**
       * <code>CLUBS = 3;</code>
       */
      public static final int CLUBS_VALUE = 3;
      /**
       * <code>DIAMONDS = 4;</code>
       */
      public static final int DIAMONDS_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CardType valueOf(int value) {
        return forNumber(value);
      }

      public static CardType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWNCARDTYPE;
          case 1: return HEARTS;
          case 2: return SPADES;
          case 3: return CLUBS;
          case 4: return DIAMONDS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CardType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CardType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CardType>() {
              public CardType findValueByNumber(int number) {
                return CardType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDescriptor().getEnumTypes().get(0);
      }

      private static final CardType[] VALUES = values();

      public static CardType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CardType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Card.CardType)
    }

    /**
     * Protobuf enum {@code protobuf.Card.CardValue}
     */
    public enum CardValue
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWNCARDVALUE = 0;</code>
       */
      UNKNOWNCARDVALUE(0),
      /**
       * <code>SEVEN = 1;</code>
       */
      SEVEN(1),
      /**
       * <code>EIGHT = 2;</code>
       */
      EIGHT(2),
      /**
       * <code>NINE = 3;</code>
       */
      NINE(3),
      /**
       * <code>TEN = 4;</code>
       */
      TEN(4),
      /**
       * <code>JACK = 5;</code>
       */
      JACK(5),
      /**
       * <code>QUEEN = 6;</code>
       */
      QUEEN(6),
      /**
       * <code>KING = 7;</code>
       */
      KING(7),
      /**
       * <code>AS = 8;</code>
       */
      AS(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWNCARDVALUE = 0;</code>
       */
      public static final int UNKNOWNCARDVALUE_VALUE = 0;
      /**
       * <code>SEVEN = 1;</code>
       */
      public static final int SEVEN_VALUE = 1;
      /**
       * <code>EIGHT = 2;</code>
       */
      public static final int EIGHT_VALUE = 2;
      /**
       * <code>NINE = 3;</code>
       */
      public static final int NINE_VALUE = 3;
      /**
       * <code>TEN = 4;</code>
       */
      public static final int TEN_VALUE = 4;
      /**
       * <code>JACK = 5;</code>
       */
      public static final int JACK_VALUE = 5;
      /**
       * <code>QUEEN = 6;</code>
       */
      public static final int QUEEN_VALUE = 6;
      /**
       * <code>KING = 7;</code>
       */
      public static final int KING_VALUE = 7;
      /**
       * <code>AS = 8;</code>
       */
      public static final int AS_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CardValue valueOf(int value) {
        return forNumber(value);
      }

      public static CardValue forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWNCARDVALUE;
          case 1: return SEVEN;
          case 2: return EIGHT;
          case 3: return NINE;
          case 4: return TEN;
          case 5: return JACK;
          case 6: return QUEEN;
          case 7: return KING;
          case 8: return AS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CardValue>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CardValue> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CardValue>() {
              public CardValue findValueByNumber(int number) {
                return CardValue.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDescriptor().getEnumTypes().get(1);
      }

      private static final CardValue[] VALUES = values();

      public static CardValue valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CardValue(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protobuf.Card.CardValue)
    }

    public static final int CARDTYPE_FIELD_NUMBER = 1;
    private int cardType_;
    /**
     * <code>optional .protobuf.Card.CardType cardType = 1;</code>
     */
    public int getCardTypeValue() {
      return cardType_;
    }
    /**
     * <code>optional .protobuf.Card.CardType cardType = 1;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType getCardType() {
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.valueOf(cardType_);
      return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.UNRECOGNIZED : result;
    }

    public static final int CARDVALUE_FIELD_NUMBER = 2;
    private int cardValue_;
    /**
     * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
     */
    public int getCardValueValue() {
      return cardValue_;
    }
    /**
     * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue getCardValue() {
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.valueOf(cardValue_);
      return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cardType_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.UNKNOWNCARDTYPE.getNumber()) {
        output.writeEnum(1, cardType_);
      }
      if (cardValue_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.UNKNOWNCARDVALUE.getNumber()) {
        output.writeEnum(2, cardValue_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cardType_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.UNKNOWNCARDTYPE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cardType_);
      }
      if (cardValue_ != eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.UNKNOWNCARDVALUE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, cardValue_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card) obj;

      boolean result = true;
      result = result && cardType_ == other.cardType_;
      result = result && cardValue_ == other.cardValue_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CARDTYPE_FIELD_NUMBER;
      hash = (53 * hash) + cardType_;
      hash = (37 * hash) + CARDVALUE_FIELD_NUMBER;
      hash = (53 * hash) + cardValue_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.Card}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.Card)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Card_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Card_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        cardType_ = 0;

        cardValue_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_Card_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card(this);
        result.cardType_ = cardType_;
        result.cardValue_ = cardValue_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance()) return this;
        if (other.cardType_ != 0) {
          setCardTypeValue(other.getCardTypeValue());
        }
        if (other.cardValue_ != 0) {
          setCardValueValue(other.getCardValueValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int cardType_ = 0;
      /**
       * <code>optional .protobuf.Card.CardType cardType = 1;</code>
       */
      public int getCardTypeValue() {
        return cardType_;
      }
      /**
       * <code>optional .protobuf.Card.CardType cardType = 1;</code>
       */
      public Builder setCardTypeValue(int value) {
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Card.CardType cardType = 1;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType getCardType() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.valueOf(cardType_);
        return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .protobuf.Card.CardType cardType = 1;</code>
       */
      public Builder setCardType(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cardType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Card.CardType cardType = 1;</code>
       */
      public Builder clearCardType() {
        
        cardType_ = 0;
        onChanged();
        return this;
      }

      private int cardValue_ = 0;
      /**
       * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
       */
      public int getCardValueValue() {
        return cardValue_;
      }
      /**
       * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
       */
      public Builder setCardValueValue(int value) {
        cardValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue getCardValue() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue result = eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.valueOf(cardValue_);
        return result == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
       */
      public Builder setCardValue(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.CardValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        cardValue_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .protobuf.Card.CardValue cardValue = 2;</code>
       */
      public Builder clearCardValue() {
        
        cardValue_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.Card)
    }

    // @@protoc_insertion_point(class_scope:protobuf.Card)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Card>
        PARSER = new com.google.protobuf.AbstractParser<Card>() {
      public Card parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Card(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Card> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Card> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.GameProgress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string command = 1;</code>
     */
    java.lang.String getCommand();
    /**
     * <code>optional string command = 1;</code>
     */
    com.google.protobuf.ByteString
        getCommandBytes();

    /**
     * <code>repeated string argument = 2;</code>
     */
    java.util.List<java.lang.String>
        getArgumentList();
    /**
     * <code>repeated string argument = 2;</code>
     */
    int getArgumentCount();
    /**
     * <code>repeated string argument = 2;</code>
     */
    java.lang.String getArgument(int index);
    /**
     * <code>repeated string argument = 2;</code>
     */
    com.google.protobuf.ByteString
        getArgumentBytes(int index);

    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    boolean hasCard();
    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard();
    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder();
  }
  /**
   * Protobuf type {@code protobuf.GameProgress}
   */
  public  static final class GameProgress extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.GameProgress)
      GameProgressOrBuilder {
    // Use GameProgress.newBuilder() to construct.
    private GameProgress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameProgress() {
      command_ = "";
      argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GameProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              command_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                argument_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              argument_.add(s);
              break;
            }
            case 26: {
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder subBuilder = null;
              if (card_ != null) {
                subBuilder = card_.toBuilder();
              }
              card_ = input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(card_);
                card_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          argument_ = argument_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_GameProgress_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_GameProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder.class);
    }

    private int bitField0_;
    public static final int COMMAND_FIELD_NUMBER = 1;
    private volatile java.lang.Object command_;
    /**
     * <code>optional string command = 1;</code>
     */
    public java.lang.String getCommand() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        command_ = s;
        return s;
      }
    }
    /**
     * <code>optional string command = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCommandBytes() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        command_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARGUMENT_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList argument_;
    /**
     * <code>repeated string argument = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArgumentList() {
      return argument_;
    }
    /**
     * <code>repeated string argument = 2;</code>
     */
    public int getArgumentCount() {
      return argument_.size();
    }
    /**
     * <code>repeated string argument = 2;</code>
     */
    public java.lang.String getArgument(int index) {
      return argument_.get(index);
    }
    /**
     * <code>repeated string argument = 2;</code>
     */
    public com.google.protobuf.ByteString
        getArgumentBytes(int index) {
      return argument_.getByteString(index);
    }

    public static final int CARD_FIELD_NUMBER = 3;
    private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card card_;
    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    public boolean hasCard() {
      return card_ != null;
    }
    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard() {
      return card_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance() : card_;
    }
    /**
     * <code>optional .protobuf.Card card = 3;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder() {
      return getCard();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCommandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, command_);
      }
      for (int i = 0; i < argument_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, argument_.getRaw(i));
      }
      if (card_ != null) {
        output.writeMessage(3, getCard());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCommandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, command_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < argument_.size(); i++) {
          dataSize += computeStringSizeNoTag(argument_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getArgumentList().size();
      }
      if (card_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getCard());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress) obj;

      boolean result = true;
      result = result && getCommand()
          .equals(other.getCommand());
      result = result && getArgumentList()
          .equals(other.getArgumentList());
      result = result && (hasCard() == other.hasCard());
      if (hasCard()) {
        result = result && getCard()
            .equals(other.getCard());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
      if (getArgumentCount() > 0) {
        hash = (37 * hash) + ARGUMENT_FIELD_NUMBER;
        hash = (53 * hash) + getArgumentList().hashCode();
      }
      if (hasCard()) {
        hash = (37 * hash) + CARD_FIELD_NUMBER;
        hash = (53 * hash) + getCard().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.GameProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.GameProgress)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_GameProgress_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_GameProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        command_ = "";

        argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (cardBuilder_ == null) {
          card_ = null;
        } else {
          card_ = null;
          cardBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_GameProgress_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.command_ = command_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          argument_ = argument_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.argument_ = argument_;
        if (cardBuilder_ == null) {
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress.getDefaultInstance()) return this;
        if (!other.getCommand().isEmpty()) {
          command_ = other.command_;
          onChanged();
        }
        if (!other.argument_.isEmpty()) {
          if (argument_.isEmpty()) {
            argument_ = other.argument_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureArgumentIsMutable();
            argument_.addAll(other.argument_);
          }
          onChanged();
        }
        if (other.hasCard()) {
          mergeCard(other.getCard());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object command_ = "";
      /**
       * <code>optional string command = 1;</code>
       */
      public java.lang.String getCommand() {
        java.lang.Object ref = command_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          command_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string command = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCommandBytes() {
        java.lang.Object ref = command_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          command_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string command = 1;</code>
       */
      public Builder setCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string command = 1;</code>
       */
      public Builder clearCommand() {
        
        command_ = getDefaultInstance().getCommand();
        onChanged();
        return this;
      }
      /**
       * <code>optional string command = 1;</code>
       */
      public Builder setCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        command_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgumentIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          argument_ = new com.google.protobuf.LazyStringArrayList(argument_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgumentList() {
        return argument_.getUnmodifiableView();
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public int getArgumentCount() {
        return argument_.size();
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public java.lang.String getArgument(int index) {
        return argument_.get(index);
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public com.google.protobuf.ByteString
          getArgumentBytes(int index) {
        return argument_.getByteString(index);
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public Builder setArgument(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentIsMutable();
        argument_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public Builder addArgument(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgumentIsMutable();
        argument_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public Builder addAllArgument(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgumentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, argument_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public Builder clearArgument() {
        argument_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argument = 2;</code>
       */
      public Builder addArgumentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureArgumentIsMutable();
        argument_.add(value);
        onChanged();
        return this;
      }

      private eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card card_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> cardBuilder_;
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public boolean hasCard() {
        return cardBuilder_ != null || card_ != null;
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard() {
        if (cardBuilder_ == null) {
          return card_ == null ? eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance() : card_;
        } else {
          return cardBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public Builder setCard(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          card_ = value;
          onChanged();
        } else {
          cardBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public Builder setCard(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          card_ = builderForValue.build();
          onChanged();
        } else {
          cardBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public Builder mergeCard(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card value) {
        if (cardBuilder_ == null) {
          if (card_ != null) {
            card_ =
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.newBuilder(card_).mergeFrom(value).buildPartial();
          } else {
            card_ = value;
          }
          onChanged();
        } else {
          cardBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = null;
          onChanged();
        } else {
          card_ = null;
          cardBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder getCardBuilder() {
        
        onChanged();
        return getCardFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilder();
        } else {
          return card_ == null ?
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance() : card_;
        }
      }
      /**
       * <code>optional .protobuf.Card card = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder>(
                  getCard(),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.GameProgress)
    }

    // @@protoc_insertion_point(class_scope:protobuf.GameProgress)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameProgress>
        PARSER = new com.google.protobuf.AbstractParser<GameProgress>() {
      public GameProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GameProgress(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameProgress> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameProgress> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.GameProgress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DistributionCardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:protobuf.DistributionCard)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string partner = 1;</code>
     */
    java.lang.String getPartner();
    /**
     * <code>optional string partner = 1;</code>
     */
    com.google.protobuf.ByteString
        getPartnerBytes();

    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> 
        getCardList();
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard(int index);
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    int getCardCount();
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    java.util.List<? extends eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> 
        getCardOrBuilderList();
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code protobuf.DistributionCard}
   */
  public  static final class DistributionCard extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:protobuf.DistributionCard)
      DistributionCardOrBuilder {
    // Use DistributionCard.newBuilder() to construct.
    private DistributionCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DistributionCard() {
      partner_ = "";
      card_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DistributionCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              partner_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                card_ = new java.util.ArrayList<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card>();
                mutable_bitField0_ |= 0x00000002;
              }
              card_.add(
                  input.readMessage(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          card_ = java.util.Collections.unmodifiableList(card_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_DistributionCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_DistributionCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder.class);
    }

    private int bitField0_;
    public static final int PARTNER_FIELD_NUMBER = 1;
    private volatile java.lang.Object partner_;
    /**
     * <code>optional string partner = 1;</code>
     */
    public java.lang.String getPartner() {
      java.lang.Object ref = partner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        partner_ = s;
        return s;
      }
    }
    /**
     * <code>optional string partner = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPartnerBytes() {
      java.lang.Object ref = partner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARD_FIELD_NUMBER = 2;
    private java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> card_;
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    public java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> getCardList() {
      return card_;
    }
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    public java.util.List<? extends eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> 
        getCardOrBuilderList() {
      return card_;
    }
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    public int getCardCount() {
      return card_.size();
    }
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard(int index) {
      return card_.get(index);
    }
    /**
     * <code>repeated .protobuf.Card card = 2;</code>
     */
    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder(
        int index) {
      return card_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPartnerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, partner_);
      }
      for (int i = 0; i < card_.size(); i++) {
        output.writeMessage(2, card_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPartnerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, partner_);
      }
      for (int i = 0; i < card_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, card_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard)) {
        return super.equals(obj);
      }
      eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard other = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard) obj;

      boolean result = true;
      result = result && getPartner()
          .equals(other.getPartner());
      result = result && getCardList()
          .equals(other.getCardList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + PARTNER_FIELD_NUMBER;
      hash = (53 * hash) + getPartner().hashCode();
      if (getCardCount() > 0) {
        hash = (37 * hash) + CARD_FIELD_NUMBER;
        hash = (53 * hash) + getCardList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protobuf.DistributionCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:protobuf.DistributionCard)
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_DistributionCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_DistributionCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.class, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.Builder.class);
      }

      // Construct using eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCardFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        partner_ = "";

        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          cardBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.internal_static_protobuf_DistributionCard_descriptor;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getDefaultInstanceForType() {
        return eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.getDefaultInstance();
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard build() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard buildPartial() {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard result = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.partner_ = partner_;
        if (cardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            card_ = java.util.Collections.unmodifiableList(card_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.card_ = card_;
        } else {
          result.card_ = cardBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard) {
          return mergeFrom((eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard other) {
        if (other == eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard.getDefaultInstance()) return this;
        if (!other.getPartner().isEmpty()) {
          partner_ = other.partner_;
          onChanged();
        }
        if (cardBuilder_ == null) {
          if (!other.card_.isEmpty()) {
            if (card_.isEmpty()) {
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCardIsMutable();
              card_.addAll(other.card_);
            }
            onChanged();
          }
        } else {
          if (!other.card_.isEmpty()) {
            if (cardBuilder_.isEmpty()) {
              cardBuilder_.dispose();
              cardBuilder_ = null;
              card_ = other.card_;
              bitField0_ = (bitField0_ & ~0x00000002);
              cardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCardFieldBuilder() : null;
            } else {
              cardBuilder_.addAllMessages(other.card_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object partner_ = "";
      /**
       * <code>optional string partner = 1;</code>
       */
      public java.lang.String getPartner() {
        java.lang.Object ref = partner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          partner_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string partner = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPartnerBytes() {
        java.lang.Object ref = partner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string partner = 1;</code>
       */
      public Builder setPartner(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        partner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string partner = 1;</code>
       */
      public Builder clearPartner() {
        
        partner_ = getDefaultInstance().getPartner();
        onChanged();
        return this;
      }
      /**
       * <code>optional string partner = 1;</code>
       */
      public Builder setPartnerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        partner_ = value;
        onChanged();
        return this;
      }

      private java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> card_ =
        java.util.Collections.emptyList();
      private void ensureCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          card_ = new java.util.ArrayList<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card>(card_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> cardBuilder_;

      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> getCardList() {
        if (cardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(card_);
        } else {
          return cardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public int getCardCount() {
        if (cardBuilder_ == null) {
          return card_.size();
        } else {
          return cardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card getCard(int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);
        } else {
          return cardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder setCard(
          int index, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.set(index, value);
          onChanged();
        } else {
          cardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder setCard(
          int index, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder addCard(eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(value);
          onChanged();
        } else {
          cardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder addCard(
          int index, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card value) {
        if (cardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardIsMutable();
          card_.add(index, value);
          onChanged();
        } else {
          cardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder addCard(
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder addCard(
          int index, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder builderForValue) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder addAllCard(
          java.lang.Iterable<? extends eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card> values) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, card_);
          onChanged();
        } else {
          cardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder clearCard() {
        if (cardBuilder_ == null) {
          card_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          cardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public Builder removeCard(int index) {
        if (cardBuilder_ == null) {
          ensureCardIsMutable();
          card_.remove(index);
          onChanged();
        } else {
          cardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder getCardBuilder(
          int index) {
        return getCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder getCardOrBuilder(
          int index) {
        if (cardBuilder_ == null) {
          return card_.get(index);  } else {
          return cardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public java.util.List<? extends eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> 
           getCardOrBuilderList() {
        if (cardBuilder_ != null) {
          return cardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(card_);
        }
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder addCardBuilder() {
        return getCardFieldBuilder().addBuilder(
            eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder addCardBuilder(
          int index) {
        return getCardFieldBuilder().addBuilder(
            index, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.getDefaultInstance());
      }
      /**
       * <code>repeated .protobuf.Card card = 2;</code>
       */
      public java.util.List<eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder> 
           getCardBuilderList() {
        return getCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder> 
          getCardFieldBuilder() {
        if (cardBuilder_ == null) {
          cardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.Card.Builder, eu.epitech.jcoinche.jcoincheserver.protobuf.Game.CardOrBuilder>(
                  card_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          card_ = null;
        }
        return cardBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:protobuf.DistributionCard)
    }

    // @@protoc_insertion_point(class_scope:protobuf.DistributionCard)
    private static final eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard();
    }

    public static eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DistributionCard>
        PARSER = new com.google.protobuf.AbstractParser<DistributionCard>() {
      public DistributionCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DistributionCard(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DistributionCard> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DistributionCard> getParserForType() {
      return PARSER;
    }

    public eu.epitech.jcoinche.jcoincheserver.protobuf.Game.DistributionCard getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Answer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_Answer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Player_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Bidding_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_Bidding_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_Card_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_Card_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_GameProgress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_GameProgress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_protobuf_DistributionCard_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_protobuf_DistributionCard_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\ngame.proto\022\010protobuf\"\246\002\n\006Answer\022\017\n\007req" +
      "uest\030\001 \001(\t\022\014\n\004code\030\002 \001(\005\022#\n\004type\030\003 \001(\0162\025" +
      ".protobuf.Answer.Type\022 \n\006player\030\004 \001(\0132\020." +
      "protobuf.Player\022\"\n\007bidding\030\005 \001(\0132\021.proto" +
      "buf.Bidding\022$\n\004game\030\006 \001(\0132\026.protobuf.Gam" +
      "eProgress\022)\n\005cards\030\007 \001(\0132\032.protobuf.Dist" +
      "ributionCard\"A\n\004Type\022\010\n\004NONE\020\000\022\n\n\006PLAYER" +
      "\020\001\022\013\n\007BIDDING\020\002\022\010\n\004GAME\020\003\022\014\n\010SETTINGS\020\004\"" +
      "\026\n\006Player\022\014\n\004name\030\001 \001(\t\"\327\002\n\007Bidding\022\013\n\003b" +
      "id\030\001 \001(\010\022\016\n\006amount\030\002 \001(\005\022,\n\010contract\030\003 \001",
      "(\0162\032.protobuf.Bidding.Contract\022)\n\006option" +
      "\030\004 \001(\0162\031.protobuf.Bidding.Options\022\017\n\007coi" +
      "nche\030\005 \001(\010\022\022\n\nsurcoinche\030\006 \001(\010\022\014\n\004pass\030\007" +
      " \001(\010\"D\n\010Contract\022\023\n\017UNKNOWNCONTRACT\020\000\022\n\n" +
      "\006AMOUNT\020\001\022\t\n\005CAPOT\020\002\022\014\n\010GENERALE\020\003\"]\n\007Op" +
      "tions\022\021\n\rUNKNOWNOPTION\020\000\022\n\n\006HEARTS\020\001\022\n\n\006" +
      "SPADES\020\002\022\t\n\005CLUBS\020\003\022\014\n\010DIAMONDS\020\004\022\006\n\002TA\020" +
      "\005\022\006\n\002SA\020\006\"\243\002\n\004Card\022)\n\010cardType\030\001 \001(\0162\027.p" +
      "rotobuf.Card.CardType\022+\n\tcardValue\030\002 \001(\016" +
      "2\030.protobuf.Card.CardValue\"P\n\010CardType\022\023",
      "\n\017UNKNOWNCARDTYPE\020\000\022\n\n\006HEARTS\020\001\022\n\n\006SPADE" +
      "S\020\002\022\t\n\005CLUBS\020\003\022\014\n\010DIAMONDS\020\004\"q\n\tCardValu" +
      "e\022\024\n\020UNKNOWNCARDVALUE\020\000\022\t\n\005SEVEN\020\001\022\t\n\005EI" +
      "GHT\020\002\022\010\n\004NINE\020\003\022\007\n\003TEN\020\004\022\010\n\004JACK\020\005\022\t\n\005QU" +
      "EEN\020\006\022\010\n\004KING\020\007\022\006\n\002AS\020\010\"O\n\014GameProgress\022" +
      "\017\n\007command\030\001 \001(\t\022\020\n\010argument\030\002 \003(\t\022\034\n\004ca" +
      "rd\030\003 \001(\0132\016.protobuf.Card\"A\n\020Distribution" +
      "Card\022\017\n\007partner\030\001 \001(\t\022\034\n\004card\030\002 \003(\0132\016.pr" +
      "otobuf.CardB]\n+eu.epitech.jcoinche.jcoin" +
      "cheserver.protobufB\004Game\252\002\'Google.Protob",
      "uf.jcoincheserver.protobufb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_protobuf_Answer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_protobuf_Answer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_Answer_descriptor,
        new java.lang.String[] { "Request", "Code", "Type", "Player", "Bidding", "Game", "Cards", });
    internal_static_protobuf_Player_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_protobuf_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_Player_descriptor,
        new java.lang.String[] { "Name", });
    internal_static_protobuf_Bidding_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_protobuf_Bidding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_Bidding_descriptor,
        new java.lang.String[] { "Bid", "Amount", "Contract", "Option", "Coinche", "Surcoinche", "Pass", });
    internal_static_protobuf_Card_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_protobuf_Card_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_Card_descriptor,
        new java.lang.String[] { "CardType", "CardValue", });
    internal_static_protobuf_GameProgress_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_protobuf_GameProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_GameProgress_descriptor,
        new java.lang.String[] { "Command", "Argument", "Card", });
    internal_static_protobuf_DistributionCard_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_protobuf_DistributionCard_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_protobuf_DistributionCard_descriptor,
        new java.lang.String[] { "Partner", "Card", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
